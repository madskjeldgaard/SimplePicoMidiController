# A github workflow to build a Raspberry Pi Pico binary
# and upload it to the github release page.
#
# This workflow will build a binary using Cmake for the Raspberry Pi Pico
# and upload it to the github release page.
name: Build
on: [push]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Get Raspberry Pi Pico SDK
      - name: Clone Raspberry Pi Pico SDK
        uses: GuillaumeFalourd/clone-github-repo-action@v2
        with:
          owner: 'raspberrypi'
          repository: 'pico-sdk'

      - name: Configure CMake
        run: export PICO_SDK_PATH="${{github.workspace}}/pico-sdk"; cmake -B ${{github.workspace}}/build -S .

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build

        # Upload the binary to the release page
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/SimplePicoMidiController.uf2
          asset_name: SimplePicoMidiController.uf2
